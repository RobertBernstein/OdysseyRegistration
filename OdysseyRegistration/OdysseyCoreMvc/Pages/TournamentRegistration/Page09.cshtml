@page

@*
    Package: Odyssey of the Mind Web Site
    Module:  Tournament Registration
    File:    Page09.cshtml
    Author:  Robert Bernstein
    Created: before 08/04/2007: v1.0: Classic ASP
    Updated: 11/04/2007: v2.0: Overhauled tournament registration; Replaced database query code with MDB2
             12/27/2009: v3.0: Rebuilt in ASP.NET 3.5
             01/01/2010: v3.1: Rebuilt in ASP.NET MVC 1.0
             11/20/2013: v4.0: Rebuilt in ASP.NET MVC 4
*@

@model Page09Model

@{
    ViewBag.Title = Model.FriendlyRegistrationName + " Page 8 of 9";
}

<h1>
    @ViewBag.Title
</h1>

<h2>
    Information Summary
</h2>
<p>
    Please take this opportunity to review all of the information you have entered on
    the previous pages. &nbsp;You will find instructions on how to make changes in the
    sections below.
</p>
<p>
    Once you click the &quot;Accept...&quot; button at the bottom of this page, you
    will be committing all of your information to our database. &nbsp;Your team's tournament
    registration will be complete <span style="font-weight: bold; text-decoration: underline">
        upon our receipt of your registration fee
    </span>.
</p>
<hr />
@using (Html.BeginForm())
{
    <h3>
        Page 1:
    </h3>
    <blockquote>
        There are no data entry fields on this page.
    </blockquote>
    <hr />
    <h3>
        Page 2:
    </h3>
    <p>
        <label>
            School or Organization Name:
        </label>
        @Html.TextBox("SchoolName", Model.SchoolName, new { @style="width: 30em", Readonly="readonly" })
    </p>
    <p>
        To change the team's school or organization name, please click the following button.&nbsp;
        You will be returned to Page 2 to modify this information.
    </p>
    <p class="required">
        Note that once you back up, you will need to re-enter all of the information on
        the pages that follow it.
    </p>
    <p style="text-align: center">
        <input type="button" value="Click To Change The Team's School or Organization" onclick="history.go(-7);" />
    </p>
    <hr />
    <h3>
        Page 3:
    </h3>
    <p>
        <label>
            Judge's ID Number:
        </label>
        @Html.TextBox("JudgeID", Model.TournamentRegistration.JudgeId, new { ReadOnly = "readonly" })
    </p>
    <p>
        <label>
            Judge's First Name:
        </label>
        @Html.TextBox("JudgeFirstName", Model.JudgeFirstName, new { ReadOnly = "readonly" })
    </p>
    <p>
        <label>
            Judge's Last Name:
        </label>
        @Html.TextBox("JudgeLastName", Model.JudgeLastName, new { ReadOnly = "readonly" })
    </p>
    <p>
        To change the judge that the team will provide for the Regional Tournament, please
        click the following button.&nbsp; You will be returned to Page 3 to modify the judge's
        ID and name.
    </p>
    <p class="required">
        Note that once you back up, you will need to re-enter all of the information on
        the pages that follow it.
    </p>
    <p style="text-align: center">
        <input type="button" value="Click To Change The Judge Provided By The Team" onclick="history.go(-5);" />
    </p>
    <hr />
    @* TODO: Commented this out; check the database for disabled Volunteer Registration instead - Rob, 12/12/2014. *@
    @*    <h3>
                Page 4:
            </h3>
            <p>
                <label>
                    Volunteer's ID Number:
                </label>
                @Html.TextBox("VolunteerID", Model.TournamentRegistration.VolunteerID, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Volunteer's First Name:
                </label>
                @Html.TextBox("VolunteerFirstName", Model.VolunteerFirstName, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Volunteer's Last Name:
                </label>
                @Html.TextBox("VolunteerLastName", Model.VolunteerLastName, new { ReadOnly = "readonly" })
            </p>
            <p>
                To change the volunteer that the team will provide for the Regional Tournament, please
                click the following button.&nbsp; You will be returned to Page 4 to modify the volunteer's
                ID and name.
            </p>
            <p class="required">
                Note that once you back up, you will need to re-enter all of the information on
                the pages that follow it.
            </p>
            <p style="text-align: center">
                <input type="button" value="Click To Change The Volunteer Provided By The Team" onclick="history.go(-5);" />
            </p>
            <hr />*@
            <h3>
                Page 4:
            </h3>
            <p>
                <label>
                    Coach's First Name:
                </label>
                @Html.TextBox("FirstName", Model.TournamentRegistration.CoachFirstName, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Coach's Last Name:
                </label>
                @Html.TextBox("CoachLastName", Model.TournamentRegistration.CoachLastName, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Coach's Address:
                </label>
                @Html.TextBox("CoachAddress", Model.TournamentRegistration.CoachAddress, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Coach's City:
                </label>
                @Html.TextBox("CoachCity", Model.TournamentRegistration.CoachCity, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Coach's State:
                </label>
                @Html.TextBox("CoachState", Model.TournamentRegistration.CoachState, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Coach's Zip Code:
                </label>
                @Html.TextBox("CoachZipCode", Model.TournamentRegistration.CoachZipCode, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Coach's Evening Phone:
                </label>
                @Html.TextBox("CoachEveningPhone", Model.TournamentRegistration.CoachEveningPhone, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Coach's Daytime Phone:
                </label>
                @Html.TextBox("CoachDaytimePhone", Model.TournamentRegistration.CoachDaytimePhone, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Coach's Mobile Phone:
                </label>
                @Html.TextBox("CoachMobilePhone", Model.TournamentRegistration.CoachMobilePhone, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Coach's E-mail:
                </label>
                @Html.TextBox("CoachEmailAddress", Model.TournamentRegistration.CoachEmailAddress, new { ReadOnly = "readonly" })
            </p>
            <br />
            <p>
                <label>
                    Alternate Coach's First Name:
                </label>
                @Html.TextBox("AltCoachFirstName", Model.TournamentRegistration.AltCoachFirstName, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Alternate Coach's Last Name:
                </label>
                @Html.TextBox("AltCoachLastName", Model.TournamentRegistration.AltCoachLastName, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Alternate Coach's Evening Phone:
                </label>
                @Html.TextBox("AltCoachEveningPhone", Model.TournamentRegistration.AltCoachEveningPhone, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Alternate Coach's Daytime Phone:
                </label>
                @Html.TextBox("AltCoachDaytimePhone", Model.TournamentRegistration.AltCoachDaytimePhone, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Alternate Coach's Mobile Phone:
                </label>
                @Html.TextBox("AltCoachMobilePhone", Model.TournamentRegistration.AltCoachMobilePhone, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Alternate Coach's E-mail:
                </label>
                @Html.TextBox("AltCoachEmailAddress", Model.TournamentRegistration.AltCoachEmailAddress, new { ReadOnly = "readonly" })
            </p>
            <p>
                To change the coach and/or alternate coach that the team will provide for the Regional
                Tournament, please click the following button.&nbsp; You will be returned to Page
                4 to modify this information.
            </p>
            <p class="required">
                Note that once you back up, you will need to re-enter all of the information on
                the pages that follow it.
            </p>
            <p style="text-align: center">
                <input type="button" value="Click To Change The Coach and/or Alternate Coach Provided By The Team"
                       onclick="history.go(-4);" />
            </p>
            <hr />
            <h3>
                Page 5:
            </h3>

            if (!string.IsNullOrEmpty(Model.TournamentRegistration.MemberFirstName1))
            {

                <p style="font-weight: bold">
                    Team Member # 1:
                </p>
                <p>
                    <label>
                        First Name:
                    </label>
                    @Html.TextBox("MemberFirstName1", Model.TournamentRegistration.MemberFirstName1, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Last Name:
                    </label>
                    @Html.TextBox("MemberLastName1", Model.TournamentRegistration.MemberLastName1, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Grade:
                    </label>
                    @Html.TextBox("MemberGrade1", Model.TournamentRegistration.MemberGrade1, new { ReadOnly = "readonly" })
                </p>

            }

            if (!string.IsNullOrEmpty(Model.TournamentRegistration.MemberFirstName2))
            {

                <p style="font-weight: bold">
                    Team Member # 2:
                </p>
                <p>
                    <label>
                        First Name:
                    </label>
                    @Html.TextBox("MemberFirstName2", Model.TournamentRegistration.MemberFirstName2, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Last Name:
                    </label>
                    @Html.TextBox("MemberLastName2", Model.TournamentRegistration.MemberLastName2, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Grade:
                    </label>
                    @Html.TextBox("MemberGrade2", Model.TournamentRegistration.MemberGrade2, new { ReadOnly = "readonly" })
                </p>

            }

            if (!string.IsNullOrEmpty(Model.TournamentRegistration.MemberFirstName3))
            {

                <p style="font-weight: bold">
                    Team Member # 3:
                </p>
                <p>
                    <label>
                        First Name:
                    </label>
                    @Html.TextBox("MemberFirstName3", Model.TournamentRegistration.MemberFirstName3, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Last Name:
                    </label>
                    @Html.TextBox("MemberLastName3", Model.TournamentRegistration.MemberLastName3, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Grade:
                    </label>
                    @Html.TextBox("MemberGrade3", Model.TournamentRegistration.MemberGrade3, new { ReadOnly = "readonly" })
                </p>

            }

            if (!string.IsNullOrEmpty(Model.TournamentRegistration.MemberFirstName4))
            {

                <p style="font-weight: bold">
                    Team Member # 4:
                </p>
                <p>
                    <label>
                        First Name:
                    </label>
                    @Html.TextBox("MemberFirstName4", Model.TournamentRegistration.MemberFirstName4, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Last Name:
                    </label>
                    @Html.TextBox("MemberLastName4", Model.TournamentRegistration.MemberLastName4, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Grade:
                    </label>
                    @Html.TextBox("MemberGrade4", Model.TournamentRegistration.MemberGrade4, new { ReadOnly = "readonly" })
                </p>

            }

            if (!string.IsNullOrEmpty(Model.TournamentRegistration.MemberFirstName5))
            {

                <p style="font-weight: bold">
                    Team Member # 5:
                </p>
                <p>
                    <label>
                        First Name:
                    </label>
                    @Html.TextBox("MemberFirstName5", Model.TournamentRegistration.MemberFirstName5, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Last Name:
                    </label>
                    @Html.TextBox("MemberLastName5", Model.TournamentRegistration.MemberLastName5, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Grade:
                    </label>
                    @Html.TextBox("MemberGrade5", Model.TournamentRegistration.MemberGrade5, new { ReadOnly = "readonly" })
                </p>

            }

            if (!string.IsNullOrEmpty(Model.TournamentRegistration.MemberFirstName6))
            {

                <p style="font-weight: bold">
                    Team Member # 6:
                </p>
                <p>
                    <label>
                        First Name:
                    </label>
                    @Html.TextBox("MemberFirstName6", Model.TournamentRegistration.MemberFirstName6, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Last Name:
                    </label>
                    @Html.TextBox("MemberLastName6", Model.TournamentRegistration.MemberLastName6, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Grade:
                    </label>
                    @Html.TextBox("MemberGrade6", Model.TournamentRegistration.MemberGrade6, new { ReadOnly = "readonly" })
                </p>

            }

            if (!string.IsNullOrEmpty(Model.TournamentRegistration.MemberFirstName7))
            {

                <p style="font-weight: bold">
                    Team Member # 7:
                </p>
                <p>
                    <label>
                        First Name:
                    </label>
                    @Html.TextBox("MemberFirstName7", Model.TournamentRegistration.MemberFirstName7, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Last Name:
                    </label>
                    @Html.TextBox("MemberLastName7", Model.TournamentRegistration.MemberLastName7, new { ReadOnly = "readonly" })
                </p>
                <p>
                    <label>
                        Grade:
                    </label>
                    @Html.TextBox("MemberGrade7", Model.TournamentRegistration.MemberGrade7, new { ReadOnly = "readonly" })
                </p>

            }
            <p>
                To change the team members' grades, please click the following button.&nbsp; You
                will be returned to Page 5 to make the changes.
            </p>
            <p class="required">
                Note that once you back up, you will need to re-enter all of the information on
                the pages that follow it.
            </p>
            <p style="text-align: center">
                <input type="button" value="Click To Change The Team Members' Grades" onclick="history.go(-3);" />
            </p>
            <hr />
            <h3>
                Page 6:
            </h3>
            <p>
                <label>
                    Team's Division:
                </label>
                @Html.TextBox("Division", Model.Division, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Problem Name:
                </label>
                @Html.TextBox("ProblemName", Model.ProblemName, new { ReadOnly = "readonly" })
            </p>

            // Only display whether team is participating in the Spontaneous problem if it is allowed for Primary teams and
            // if this IS a Primary team
            if ((Model.Config["PrimaryTeamsMayDoSpontaneous"] == "True") && (Model.Division == "Primary"))
            {
                <p>
                    <label>
                        Team Will Compete In Spontaneous:
                    </label>
                    @Html.TextBox("IsDoingSpontaneous", Model.IsDoingSpontaneous, new { ReadOnly = "readonly" })
                </p>
            }

            <p>
                To change the problem in which your team will compete (Primary only has one problem,
                so it cannot be changed) or to change whether your team will compete as a Primary
                Team to a Division 1 Team or vice-versa, please click the following button.&nbsp;
                You will be returned to Page 6 to modify this information.
            </p>
            <p class="required">
                Note that once you back up, you will need to re-enter all of the information on
                the pages that follow it.
            </p>
            <p style="text-align: center">
                <input type="button" value="Click To Change The Team's Problem" onclick="history.go(-2);" />
            </p>
            <hr />
            <h3>
                Page 7:
            </h3>
            <p>
                <label>
                    Scheduling Issues:
                </label>
                @Html.TextArea("SchedulingIssues", Model.TournamentRegistration.SchedulingIssues, 6, 100, new { ReadOnly = "readonly" })
            </p>
            <p>
                <label>
                    Special Considerations:
                </label>
                @Html.TextArea("SpecialConsiderations", Model.TournamentRegistration.SpecialConsiderations, 6, 100, new { ReadOnly = "readonly" })
            </p>
            <p>
                To change any scheduling issues or special considerations that the team may have,
                please click the following button.&nbsp; You will be returned to Page 7 to modify
                this information.
            </p>
            <p style="text-align: center">
                <input type="button" value="Click To Change Scheduling Issues or Special Considerations the Team May Have"
                       onclick="history.go(-1);" />
            </p>
            <hr />
            <p>
                Before you click the &quot;Accept...&quot; button below, make sure that you agree
                with all of the data entered above.
            </p>
            <p style="text-align: center" class="required">
                This is your last opportunity to change any information.
            </p>
            <p>
                <span style="font-weight: bold">Note:</span> You will be able to print out a copy
                of all of the information you entered at the end of the registration process. &nbsp;You
                will also be e-mailed a copy of all the information you entered.
            </p>
            <hr />
            <p style="text-align: right">
                <input type="submit" value="Accept All Values and Continue to the Next Page >>" id="nextButton"
                       name="nextButton" />
            </p>
            <div style="text-align: left">
                <a href="@Model.Config["HomePage"]">Return to the Home Page</a>
            </div>
        }

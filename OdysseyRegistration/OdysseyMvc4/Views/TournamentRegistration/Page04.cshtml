@{
    // Package:	Odyssey of the Mind Web Site
    // Module:	Tournament Registration
    // File:	Page04.cshtml
    // Author:	Robert Bernstein
    // Created:	before 08/04/2007: v1.0: Classic ASP
    // Updated:	11/04/2007: v2.0: Overhauled tournament registration; Replaced database query code with MDB2
    //			12/27/2009: v3.0: Rebuilt in ASP.NET 3.5
    //			01/01/2010: v3.1: Rebuilt in ASP.NET MVC 1.0
    //          12/09/2012: v3.2: Added a volunteer verification page, removed volunteer
    //                            registration page in favor of a separate volunteer
    //                            registration process.
    //			11/19/2013: v4.0: Rebuilt in ASP.NET MVC 4
}

@model OdysseyMvc4.ViewData.TournamentRegistration.Page04ViewData

@{
    ViewBag.Title = Model.FriendlyRegistrationName + " Page 4 of 10";
}

<script type="text/javascript">
    $(function () {
        // Set the focus to the default control and select its text.
        $("#VolunteerId").focus().select();
    });
</script>

<h1>
    @ViewBag.Title
</h1>

@*
    // If the VolunteerId, VolunteerFirstName, and VolunteerLastName all exist in a single record (i.e. turn out to be a real
    // volunteer), we will need to redirect the client browser to Page05.aspx.  However, this does not work if we have output
    // ANY headers by the time we try to issue the redirect statement, which involves calling the header("Location:...")
    // function.  So, we start buffering the output generated by this page until we know that we are not going to redirect
    // the client browser to another page; we can then flush all of the output.
*@

@if (Model.NoVolunteersFound)
{
    <p class="required">
        Your volunteer could not be located in the database.
    </p>
    <p>
        You may try another combination of Volunteer ID, First Name, and Last Name.
    </p>
    <p>
        You may also wish to contact your volunteer and confirm the specific first and last
        names that he or she entered during registration.
    </p>
    <p>
        If you do not wish to search again, you may click the &#8220;Return to Home Page&#8221;
        button to end the @Model.FriendlyRegistrationName process.
    </p>
    <hr />
}
else if (Model.VolunteerAlreadyTaken)
{
    <p class="required">
        Your volunteer was located in the database, but is already assigned to a team.
    </p>
    <p>
        You may need to find a different volunteer for your team.
    </p>
    <p>
        If you have entered all the required information correctly and this volunteer is
        supposed to represent your team, please contact him or her to ensure that he or
        she has not already committed to volunteer for another team.
    </p>
    <p>
        If your volunteer does not believe another team should have signed him or her up
        to be their volunteer, please contact our Regional Director using our
        <a href="@Model.Config["ContactUsURL"]" target="_blank">Contact Us</a> page.
    </p>
    <p>
        You may try another combination of Volunteer ID, First Name, and Last Name or click
        the &#8220;Return to Home Page&#8221; button to end the Tournament Registration
        process.
    </p>
    <hr />
}

<p style="text-align: left; font-weight: bold">
    Please enter the ID number and name of your volunteer:
</p>
<p>
    If your volunteer has not yet registered, he or she <span style="font-weight: bold">must</span> complete this
    process before you can proceed.&nbsp; Once they have registered, make sure they provide you with their Volunteer's
    ID number so you may enter it below.
</p>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <p>
        @Html.LabelFor(x => x.VolunteerId)
        @Html.TextBoxFor(x => x.VolunteerId)
        @Html.ValidationMessageFor(x => x.VolunteerId)
    </p>
    <p>
        @Html.LabelFor(x => x.VolunteerFirstName)
        @Html.TextBoxFor(x => x.VolunteerFirstName)
        @Html.ValidationMessageFor(x => x.VolunteerFirstName)
    </p>
    <p>
        @Html.LabelFor(x => x.VolunteerLastName)
        @Html.TextBoxFor(x => x.VolunteerLastName)
        @Html.ValidationMessageFor(x => x.VolunteerLastName)
    </p>
    <hr />
    <div style="text-align: right">
        <input type="submit" value="Next Page >>" id="nextButton" name="nextButton" />
    </div>
    <div style="text-align: left">
        <a href="@Model.Config["HomePage"]">Return to the Home Page</a>
    </div>
}

// <auto-generated />
using System;
using JudgeRegistrationRazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JudgeRegistrationRazor.Migrations
{
    [DbContext(typeof(OdysseyContext))]
    [Migration("20241014015755_UpdateSchoolsSeedData")]
    partial class UpdateSchoolsSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JudgeRegistrationRazor.Models.CoachesTrainingDivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_coaches_training_divisions");

                    b.ToTable("CoachesTrainingDivisions");
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.CoachesTrainingRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_coaches_training_regions");

                    b.ToTable("CoachesTrainingRegions");
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.CoachesTrainingRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Division")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegionNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SchoolName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SelectedProblem")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("TimeRegistered")
                        .HasColumnType("datetime");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearsInvolved")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id")
                        .HasName("PK_coaches_training");

                    b.ToTable("CoachesTrainingRegistrations");
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.CoachesTrainingRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_coaches_training_roles");

                    b.ToTable("CoachesTrainingRoles");
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.HasKey("Id")
                        .HasName("PK_config");

                    b.ToTable("Config", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AcceptingPayPal",
                            Value = "True"
                        },
                        new
                        {
                            Id = 2,
                            Name = "CoachesHandbookURL",
                            Value = ""
                        },
                        new
                        {
                            Id = 3,
                            Name = "CoachesTrainingRegistrationCloseDateTime",
                            Value = "2013-11-08 22:00"
                        },
                        new
                        {
                            Id = 4,
                            Name = "CoachesTrainingRegistrationOpenDateTime",
                            Value = "2013-08-01 00:00"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ContactUsURL",
                            Value = "/wp/?page_id=129"
                        },
                        new
                        {
                            Id = 6,
                            Name = "CoordinatorsDoNotPayCoachesTrainingRegistrationFee",
                            Value = "True"
                        },
                        new
                        {
                            Id = 7,
                            Name = "EmailServer",
                            Value = "mail.novanorth.org"
                        },
                        new
                        {
                            Id = 8,
                            Name = "EventVolunteerInformationMessage",
                            Value = "Each team is required to provide one volunteer. &nbsp;As that volunteer, you will be asked to work about 2 hours at morning registration for judges and teams, souvenir sales, the spontaneous waiting area, or other similar jobs. &nbsp;Volunteers will be informed by e-mail of their assignment."
                        },
                        new
                        {
                            Id = 9,
                            Name = "HomePage",
                            Value = "https://www.novanorth.org"
                        },
                        new
                        {
                            Id = 10,
                            Name = "IsCoachesTrainingRegistrationDown",
                            Value = "False"
                        },
                        new
                        {
                            Id = 11,
                            Name = "IsJudgesRegistrationDown",
                            Value = "False"
                        },
                        new
                        {
                            Id = 12,
                            Name = "IsTournamentRegistrationDown",
                            Value = "False"
                        },
                        new
                        {
                            Id = 13,
                            Name = "IsVolunteerRegistrationDown",
                            Value = "False"
                        },
                        new
                        {
                            Id = 14,
                            Name = "JudgesRegistrationCloseDateTime",
                            Value = "2025-02-29 23:59"
                        },
                        new
                        {
                            Id = 15,
                            Name = "JudgesRegistrationOpenDateTime",
                            Value = "2024-09-28 00:00"
                        },
                        new
                        {
                            Id = 16,
                            Name = "LinkToSynopses",
                            Value = "https://www.odysseyofthemind.com/wp-content/uploads/2023/06/2024-SYNOPSIS.pdf"
                        },
                        new
                        {
                            Id = 17,
                            Name = "PrimaryTeamsMayDoSpontaneous",
                            Value = "True"
                        },
                        new
                        {
                            Id = 18,
                            Name = "ProgramGuideURL",
                            Value = "https://www.odysseyofthemind.com/program-guide"
                        },
                        new
                        {
                            Id = 19,
                            Name = "RegionalDirectorEmail",
                            Value = "director@novanorth.org"
                        },
                        new
                        {
                            Id = 20,
                            Name = "RegionalDirectorText",
                            Value = "our Regional Director"
                        },
                        new
                        {
                            Id = 21,
                            Name = "RegionName",
                            Value = "NoVA North"
                        },
                        new
                        {
                            Id = 22,
                            Name = "RegionNumber",
                            Value = "9"
                        },
                        new
                        {
                            Id = 23,
                            Name = "SchoolCoordinatorsDoNotPayMessage",
                            Value = "<ul><li>Note that School Coordinators do not pay this fee.</li></ul>"
                        },
                        new
                        {
                            Id = 24,
                            Name = "TeamsVolunteerWantsToSeeMessage",
                            Value = "Please list the teams that you would like to see perform during the day so we may do our best to schedule around this conflict. &nbsp;For each team, list the school, division, problem name, and coach's name so that we know which team you mean. &nbsp;Also let us know if there is any time the day of the tournament that you will not be available to serve as a volunteer: "
                        },
                        new
                        {
                            Id = 25,
                            Name = "TournamentRegistrationCloseDateTime",
                            Value = "2025-01-25 23: 59"
                        },
                        new
                        {
                            Id = 26,
                            Name = "TournamentRegistrationOpenDateTime",
                            Value = "2024-09-15 00: 00"
                        },
                        new
                        {
                            Id = 27,
                            Name = "VolunteerNotesMessage",
                            Value = "Please provide us with any other information you would like to share as part of your registration.&nbsp; For example, this is a good place to let us know if you have any previous experience volunteering at Odyssey tournaments, and if so, what that was. &nbsp;Also let us know if you would be interested in doing that again or if you would prefer to do something else. &nbsp;Please keep your comments to 500 characters or less: "
                        },
                        new
                        {
                            Id = 28,
                            Name = "VolunteerRegistrationCloseDateTime",
                            Value = "2014-1-18 14: 00"
                        },
                        new
                        {
                            Id = 29,
                            Name = "VolunteerRegistrationOpenDateTime",
                            Value = "2013-11-10 00: 00"
                        },
                        new
                        {
                            Id = 30,
                            Name = "WebmasterEmail",
                            Value = "webmaster@novanorth.org"
                        },
                        new
                        {
                            Id = 31,
                            Name = "WebmasterEmailPassword",
                            Value = ""
                        },
                        new
                        {
                            Id = 32,
                            Name = "WillHaveCoachesTrainingRegistration",
                            Value = "False"
                        },
                        new
                        {
                            Id = 33,
                            Name = "WillHaveVolunteerRegistration",
                            Value = "False"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Year",
                            Value = "2023"
                        });
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.ContactUsRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contact_name");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email_address");

                    b.HasKey("Id")
                        .HasName("PK_contact_us_recipients");

                    b.ToTable("ContactUsRecipients");
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.ContactUsSenderRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("role_name");

                    b.HasKey("Id")
                        .HasName("PK_contact_us_sender_roles");

                    b.ToTable("ContactUsSenderRoles");
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EventCoordinatorEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventCoordinatorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventCoordinatorPhone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventCost")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EventMailBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventMakeChecksOutTo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EventName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EventPayeeAddress1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventPayeeAddress2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventPayeeCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventPayeeEmail1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventPayeeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventPayeePhone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EventPayeeState")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EventPayeeZipCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("EventVolunteerInformationMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("InformationURL");

                    b.Property<string>("LateEventCost")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateOnly?>("LateEventCostStartDate")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LocationAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LocationCity")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LocationMapUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LocationMapURL");

                    b.Property<string>("LocationPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocationState")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("LocationUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LocationURL");

                    b.Property<string>("LocationUrlcolor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LocationURLColor");

                    b.Property<DateOnly?>("PaymentDueDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TeamsVolunteerWantsToSeeMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_events");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.Judge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("AttendedJt")
                        .HasColumnType("bit")
                        .HasColumnName("AttendedJT?");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Coi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COI");

                    b.Property<string>("DaytimePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EveningPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HasChildrenCompeting")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool?>("InformationMailed")
                        .HasColumnType("bit")
                        .HasColumnName("InformationMailed?");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousPositions")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProblemAssigned")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProblemChoice1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ProblemChoice2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ProblemChoice3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ProblemCoi1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("ProblemCOI1");

                    b.Property<string>("ProblemCoi2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("ProblemCOI2");

                    b.Property<string>("ProblemCoi3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("ProblemCOI3");

                    b.Property<string>("ProblemId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProblemID");

                    b.Property<string>("State")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TeamId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TimeAssignedToTeam")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeRegistered")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeRegistrationStarted")
                        .HasColumnType("datetime");

                    b.Property<string>("TshirtSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WantsCeucredit")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("WantsCEUCredit");

                    b.Property<string>("WillingToBeScorechecker")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("YearsOfLongTermJudgingExperience")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearsOfSpontaneousJudgingExperience")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_judges");

                    b.ToTable("Judges");
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.Problem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CostLimit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Divisions")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pcaddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PCAddress");

                    b.Property<string>("Pccity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PCCity");

                    b.Property<string>("Pcemail1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PCEmail1");

                    b.Property<string>("Pcemail2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PCEmail2");

                    b.Property<string>("PcfaxNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PCFaxNumber");

                    b.Property<string>("PcfirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PCFirstName");

                    b.Property<string>("PchomePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PCHomePhone");

                    b.Property<string>("PclastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PCLastName");

                    b.Property<string>("PcmobilePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PCMobilePhone");

                    b.Property<string>("PcpostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PCPostalCode");

                    b.Property<string>("PcstateOrProvince")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PCStateOrProvince");

                    b.Property<string>("PcworkPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("PCWorkPhone");

                    b.Property<string>("ProblemCaptainId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProblemCaptainID");

                    b.Property<string>("ProblemCategory")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProblemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_problem");

                    b.ToTable("Problem", (string)null);
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoordAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CoordAltPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CoordCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoordEmailName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoordFaxNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CoordFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoordLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoordMobilePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CoordNew")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CoordNew?");

                    b.Property<string>("CoordPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CoordPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CoordState")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Membership1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Membership#1");

                    b.Property<string>("Membership1seen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Membership#1seen");

                    b.Property<string>("Membership2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Membership#2");

                    b.Property<string>("Membership2seen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Membership#2seen");

                    b.Property<string>("Membership3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Membership#3");

                    b.Property<string>("Membership3seen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Membership#3seen");

                    b.Property<string>("Membership4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Membership#4");

                    b.Property<string>("Membership4seen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Membership#4seen");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("RegionNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("Share")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Share?");

                    b.Property<string>("State")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Schools");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            Name = "Crossfield Elementary (27938)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 10,
                            Name = "Forest Edge Elementary (30388)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 11,
                            Name = "Fox Mill Elementary (28383)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 16,
                            Name = "Hunters Woods Elementary (26974)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 19,
                            Name = "Lake Anne Elementary (28584)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 21,
                            Name = "Langston Hughes Middle (24750)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 25,
                            Name = "Mosaic Elementary (34282)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 28,
                            Name = "Oakton Elementary (29523)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 29,
                            Name = "Oakton High (32076)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 35,
                            Name = "Rachel Carson Middle (31253)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 42,
                            Name = "South Lakes High (32307)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 44,
                            Name = "Sunrise Valley Elementary (30527)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 46,
                            Name = "Waples Mill Elementary (27319)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 69,
                            Name = "Capital Baptist Homeschool (34281)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 71,
                            Name = "Clearview Elementary (34978)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 72,
                            Name = "Colvin Run Elementary (34412)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 73,
                            Name = "Cooper Middle (32330)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 74,
                            Name = "Fairhill Elementary (34615)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 75,
                            Name = "Forestville Elementary (25649)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 76,
                            Name = "James Madison High (34337)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 77,
                            Name = "Kilmer Middle (37402)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 78,
                            Name = "Louise Archer Elementary A (31526)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 79,
                            Name = "Marshall Road Elementary (32229)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 80,
                            Name = "Montessori School of McLean (35043)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 83,
                            Name = "Pine Spring Elementary (33080)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 86,
                            Name = "Vienna Elementary (25021)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 89,
                            Name = "Woodburn Elementary (34491)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 90,
                            Name = "Lemon Road Elementary (32154)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 94,
                            Name = "Camelot Elementary (35600)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 99,
                            Name = "Great Falls Elementary (35508)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 100,
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 101,
                            Name = "Luther Jackson Middle (38143)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 102,
                            Name = "Navy Elementary (35835)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 105,
                            Name = "Wolftrap Elementary (30618)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 107,
                            Name = "Dranesville Elementary (36733)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 113,
                            Name = "Westlawn Elementary (36621)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 114,
                            Name = "Herndon High (36944)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 115,
                            Name = "Timber Lane Elementary (36673)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 120,
                            Name = "St. Mark Catholic (37259)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 127,
                            Name = "Falls Church High (38263)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 131,
                            Name = "Hutchison Elementary (38715)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 135,
                            Name = "Montessori School of Holmes Run (39059)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 141,
                            Name = "The Academy Of Christian Education (39595)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 143,
                            Name = "Aldrin Elementary (34360)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 145,
                            Name = "Edlin School (39940)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 149,
                            Name = "Armstrong Ele Sch (29186)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 150,
                            Name = "Bailey's Ele Sch for Arts/Sci (17700)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 151,
                            Name = "Beech Tree Ele Sch (34226)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 152,
                            Name = "Belvedere Ele Sch (23724)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 153,
                            Name = "Canterbury Woods Ele Sch (19995)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 154,
                            Name = "Congressional School of VA (40743)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 156,
                            Name = "Kent Gardens Ele Sch (23353)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 157,
                            Name = "Lutheran Church of the Redeemer (40973)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 158,
                            Name = "Mantua Elementary (30646)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 159,
                            Name = "Montessori School of Northern VA (35609)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 160,
                            Name = "Pinnacle Academy (40749)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 161,
                            Name = "Robert Frost Middle (23506)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 162,
                            Name = "Sleepy Hollow Elementary (32248)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 163,
                            Name = "Thomas Jefferson High Sci/Tech (5808)",
                            RegionNumber = (short)11
                        },
                        new
                        {
                            Id = 164,
                            Name = "Thoreau Middle (40813)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 165,
                            Name = "Wakefield Forest Elementary (11847)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 166,
                            Name = "Westminster School (38940)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 168,
                            Name = "Haycock Elementary (6610)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 169,
                            Name = "Herndon Reston Homeschoolers (31275)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 170,
                            Name = "Deo Gratias Homeschoolers (41329)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 172,
                            Name = "Reston Montessori School (41462)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 173,
                            Name = "Mason Crest Elementary (41477)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 174,
                            Name = "Langley H S (41493)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 175,
                            Name = "Spring Hill Elementary (30642)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 176,
                            Name = "Al Fatih Academy (41514)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 178,
                            Name = "McLean Robotics Institute (41575)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 179,
                            Name = "Terraset Elementary (41574)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 180,
                            Name = "Westbriar Elementary School (42145)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 181,
                            Name = "Pinecrest School (42218)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 182,
                            Name = "Potomac School (42228)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 183,
                            Name = "Emmanuel Lutheran Church (42435)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 184,
                            Name = "Longfellow Middle (15934)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 185,
                            Name = "Chesterbrook Elementary (30092)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 186,
                            Name = "Woodson High School (34445)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 187,
                            Name = "Dodgeball Theatre (20571)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 188,
                            Name = "Stenwood Elementary School (43994)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 189,
                            Name = "Freedom Hill Elementary School (44102)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 191,
                            Name = "Glasgow Middle School (27251)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 193,
                            Name = "Flint Hill School (22826)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 194,
                            Name = "Marshall HS (7858)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 195,
                            Name = "Glen Forest ES (45292)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 196,
                            Name = "St. Joseph School (45645)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 197,
                            Name = "Carson Middle School (45733)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 198,
                            Name = "Ideaventions Academy for Math/Sci (45772)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 200,
                            Name = "McLean H S (23563)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 201,
                            Name = "Basis Independent McLean (46461)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 202,
                            Name = "Dolley Madison Library (46496)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 203,
                            Name = "Cunningham Park Elementary School (26971)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 204,
                            Name = "Parklawn Elementary School (46540)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 205,
                            Name = "Compass Homeschool (46568)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 206,
                            Name = "Shrevewood Elementary School (18952)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 207,
                            Name = "Vienna Girls (48428(V))",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 208,
                            Name = "Immanuel Christian School (35779)",
                            RegionNumber = (short)11
                        },
                        new
                        {
                            Id = 209,
                            Name = "Nysmith School for the Gifted (30470)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 210,
                            Name = "Oak Hill Elementary School (31486)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 211,
                            Name = "Clermont Elementary School (10502)",
                            RegionNumber = (short)11
                        },
                        new
                        {
                            Id = 212,
                            Name = "Sangster Elementary School A (29184)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 213,
                            Name = "McNair Upper Elementary School (49397)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 214,
                            Name = "Floris Elementary School (35369)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 215,
                            Name = "Louise Archer Elementary B (44280)",
                            RegionNumber = (short)9
                        },
                        new
                        {
                            Id = 216,
                            Name = "Sangster Elementary School B (32279)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 217,
                            Name = "Sangster Elementary School C (45151)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 218,
                            Name = "Sangster Elementary School D (45152)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 220,
                            Name = "Sangster Elementary School E (45153)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 221,
                            Name = "Sangster Elementary School F (45154)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 222,
                            Name = "Lake Braddock Secondary School (5812)",
                            RegionNumber = (short)12
                        },
                        new
                        {
                            Id = 223,
                            Name = "Powell Elementary School (39730)",
                            RegionNumber = (short)12
                        });
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.TournamentRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltCoachDaytimePhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AltCoachEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AltCoachEveningPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AltCoachFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AltCoachLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AltCoachMobilePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CoachAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CoachCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoachDaytimePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CoachEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoachEveningPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CoachFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoachLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoachMobilePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CoachState")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CoachZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Division")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("JudgeId")
                        .HasColumnType("smallint")
                        .HasColumnName("JudgeID");

                    b.Property<string>("MemberFirstName1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberFirstName2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberFirstName3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberFirstName4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberFirstName5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberFirstName6")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberFirstName7")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberGrade1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberGrade2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberGrade3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberGrade4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberGrade5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberGrade6")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberGrade7")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberLastName1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberLastName2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberLastName3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberLastName4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberLastName5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberLastName6")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberLastName7")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MembershipName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MembershipNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Paid")
                        .HasColumnType("smallint");

                    b.Property<int?>("ProblemId")
                        .HasColumnType("int")
                        .HasColumnName("ProblemID");

                    b.Property<string>("SchedulingIssues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.Property<string>("SpecialConsiderations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Spontaneous")
                        .HasColumnType("bit");

                    b.Property<string>("TeamRegistrationFee")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("TimeRegistered")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeRegistrationStarted")
                        .HasColumnType("datetime");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VolunteerId")
                        .HasColumnType("int")
                        .HasColumnName("VolunteerID");

                    b.HasKey("Id");

                    b.ToTable("TournamentRegistration", (string)null);
                });

            modelBuilder.Entity("JudgeRegistrationRazor.Models.Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DaytimePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EveningPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    b.Property<DateTime?>("TimeAssignedToTeam")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeRegistered")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeRegistrationStarted")
                        .HasColumnType("datetime");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolunteerWantsToSee")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });
#pragma warning restore 612, 618
        }
    }
}
